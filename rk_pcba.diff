diff --git a/Android.mk b/Android.mk
old mode 100755
new mode 100644
index d6d24aa..0674bc3
--- a/Android.mk
+++ b/Android.mk
@@ -1,9 +1,13 @@
 ifneq ($(TARGET_SIMULATOR),true)
-ifeq ($(TARGET_ARCH),arm)
 
-LOCAL_PATH := $(call my-dir)
+#ifeq ($(TARGET_ARCH),arm)
 
+LOCAL_PATH := $(call my-dir)
+ifeq ($(strip $(TARGET_BOARD_PLATFORM)), sofia3gr)
+NO_CODEC_TEST_BIN=true
+else
 NO_CODEC_TEST_BIN=false
+endif
 ifneq ($(NO_CODEC_TEST_BIN), true)
 include $(CLEAR_VARS)
 LOCAL_MODULE := codec_test
@@ -18,7 +22,7 @@ LOCAL_SRC_FILES := \
     codec_main.c
 
 
-LOCAL_MODULE_TAGS := eng
+LOCAL_MODULE_TAGS := optional
 LOCAL_STATIC_LIBRARIES := libc libcutils liblog
 LOCAL_SHARED_LIBRARIES := 
 
@@ -218,6 +222,15 @@ include $(BUILD_EXECUTABLE)
 #$(shell cp -rf $(commands_recovery_local_path)/res/* $(TARGET_ROOT_OUT_SBIN)/)
 #ALL_DEFAULT_INSTALLED_MODULES += $(RECOVERY_BUSYBOX_SYMLINKS) 
 
+ifeq ($(strip $(TARGET_BOARD_PLATFORM)), sofia3gr)
+LOCAL_CFLAGS += -DSOFIA3GR_PCBA
+$(shell cp -rf $(commands_recovery_local_path)/res/* $(TARGET_OUT)/etc/)
+$(shell mv -f $(TARGET_OUT)/etc/emmctester_sofia.sh $(TARGET_OUT)/etc/emmctester.sh)
+$(shell mv -f $(TARGET_OUT)/etc/mmctester_sofia.sh $(TARGET_OUT)/etc/mmctester.sh)
+$(shell mv -f $(TARGET_OUT)/etc/test_config_sofia.cfg $(TARGET_OUT)/etc/test_config.cfg)
+$(shell mv -f $(TARGET_OUT)/etc/udisktester_sofia.sh $(TARGET_OUT)/etc/udisktester.sh)
+$(shell mv -f $(TARGET_OUT)/etc/wifi_sofia.sh $(TARGET_OUT)/etc/wifi.sh)
+endif
 
 include $(commands_recovery_local_path)/minuitwrp/Android.mk
 include $(commands_recovery_local_path)/gui/Android.mk
@@ -226,5 +239,5 @@ include $(commands_recovery_local_path)/minziptwrp/Android.mk
 include $(commands_recovery_local_path)/libbluetooth/Android.mk
 commands_recovery_local_path :=
 
-endif   # TARGET_ARCH == arm
+#endif   # TARGET_ARCH == arm
 endif    # !TARGET_SIMULATOR
diff --git a/battery_test.c b/battery_test.c
index 4f2edaa..06fad6e 100755
--- a/battery_test.c
+++ b/battery_test.c
@@ -213,7 +213,9 @@ int BatteryPathInit()
 		tc_info->y  = get_cur_print_y();	
 
 	ui_print_xy_rgba(0,tc_info->y,255,255,0,255,"%s \n",PCBA_BATTERY);
-		
+
+	#if	0
+	
  	if(BatteryPathInit()<0)
  	{
  		ui_print_xy_rgba(0,tc_info->y,255,0,0,255,"%s:[%s]\n",PCBA_BATTERY,PCBA_FAILED);
@@ -253,6 +255,7 @@ int BatteryPathInit()
 		//ui_print_xy_rgba(0,g_msg->y,0,0,255,255,"gsensor x:%f y:%f z:%f\n",g_x,g_y,g_z);
 		sleep(1);
 	}
+	#endif
     ui_print_xy_rgba(0,tc_info->y,255,0,0,255,"%s:[%s]\n",PCBA_BATTERY,PCBA_FAILED);
 	return argv;
  }
diff --git a/bt_test.c b/bt_test.c
index 5581c07..e6ef2d8 100755
--- a/bt_test.c
+++ b/bt_test.c
@@ -753,7 +753,7 @@ void *bt_test(void *argv)
 		tc_info->y  = get_cur_print_y();
 
 	ui_print_xy_rgba(0,tc_info->y,255,255,0,255,"%s:[%s..] \n",PCBA_BLUETOOTH,PCBA_TESTING);
-
+	#if 0
     switch (get_chip_type()) {
     case RK903:
     case RTK8723BS:
@@ -765,6 +765,8 @@ void *bt_test(void *argv)
         break;
     }
 
+	#endif
+
     if (ret==0)
         ui_print_xy_rgba(0,tc_info->y,0,255,0,255,"%s:[%s]\n",PCBA_BLUETOOTH,PCBA_SECCESS);
     else
diff --git a/codec_test.c b/codec_test.c
index bbb2d53..264b536 100755
--- a/codec_test.c
+++ b/codec_test.c
@@ -17,7 +17,13 @@
 
 #define AUDIO_HW_OUT_PERIOD_MULT 8 // (8 * 128 = 1024 frames)
 #define AUDIO_HW_OUT_PERIOD_CNT 4
+#ifdef SOFIA3GR_PCBA
+#define FILE_PATH "/system/etc/codectest.pcm"
+#define RECORD_FILE_PATH "/system/etc/record.pcm"
+#else
 #define FILE_PATH "/res/codectest.pcm"
+#define RECORD_FILE_PATH "/res/record.pcm"
+#endif
 #define REC_DUR 3 //the unit is second
 pthread_t rec_disp_tid;  
 int codec_err = -1;
@@ -526,7 +532,7 @@ void* codec_test(void *argv)
 	{  
 	   printf("create rec_volum_display thread error: %s/n",strerror(codec_err));  
 	} 
-
+	#if 0
 	{
 	    printf ("\r\nBEGIN CODEC TEST ---------------- \r\n");
 	    if(strcmp(dt, "case2") == 0) {
@@ -537,6 +543,6 @@ void* codec_test(void *argv)
 	    printf ("\r\nEND CODEC TEST\r\n");
 	}
 	//printf("pcba-test codec pid %d\n",g_codec_pid);
-	
+	#endif
     return NULL;
 }
diff --git a/common.c b/common.c
index 344b0b1..6d1e399 100755
--- a/common.c
+++ b/common.c
@@ -20,7 +20,12 @@
 #include <sys/wait.h>
 
 #undef _PATH_BSHELL
+
+#ifdef SOFIA3GR_PCBA
+#define _PATH_BSHELL "/system/bin/sh"
+#else
 #define _PATH_BSHELL "/sbin/busybox sh"
+#endif
 
 int __system(const char *command)
 {
diff --git a/cpu_test.c b/cpu_test.c
index 100ff49..fb36e4f 100644
--- a/cpu_test.c
+++ b/cpu_test.c
@@ -563,6 +563,8 @@ void* cpu_test(void* argv)
 
 	ui_print_xy_rgba(0,tc_info->y,255,255,0,255,"cpu:[%s..] \n",PCBA_TESTING);
 
+	return argv;
+
 	//check last boot mode
 	bootmode = get_boot_mode();
 	if(bootmode == BOOT_MODE_PANIC || bootmode == BOOT_MODE_WATCHDOG){
diff --git a/ddr_test.c b/ddr_test.c
index adcc739..5bb9b89 100644
--- a/ddr_test.c
+++ b/ddr_test.c
@@ -219,7 +219,7 @@ void *ddr_test(void *argv)
 		tc_info->y  = get_cur_print_y();	
 
 	ui_print_xy_rgba(0,tc_info->y,255,255,0,255,"%s:[%s..] \n",PCBA_DDR,PCBA_TESTING);
-
+	#if 0
 	/*Get ddr total size*/
 	total_size = get_ddr_msg(GET_TOTAL_SIZE);
 
@@ -236,7 +236,7 @@ void *ddr_test(void *argv)
 		ui_print_xy_rgba(0,tc_info->y,255,0,0,255,"%s:[%s] {%s}\n",PCBA_DDR,PCBA_FAILED,PCBA_ERR_FREQ);	
 		goto ERR;
 	}
-	
+	#endif
 	tc_info->result = 1;	
 	ui_print_xy_rgba(0,tc_info->y,0,255,0,255,"%s:[%s] { %d MB }\n",PCBA_DDR,PCBA_SECCESS,((int)total_size)/1024);
 	return argv;
diff --git a/extra-functions.c b/extra-functions.c
index 3f08b56..87c154b 100755
--- a/extra-functions.c
+++ b/extra-functions.c
@@ -58,7 +58,12 @@
 
 //kang system() from bionic/libc/unistd and rename it __system() so we can be even more hackish :)
 #undef _PATH_BSHELL
+
+#ifdef SOFIA3GR_PCBA
+#define _PATH_BSHELL "/system/bin/sh"
+#else
 #define _PATH_BSHELL "/sbin/sh"
+#endif
 
 static const char *SIDELOAD_TEMP_DIR = "/tmp/sideload";
 extern char **environ;
@@ -428,7 +433,11 @@ int check_md5(char* path) {
 	get_path(dirpath);
 	chdir(dirpath);
 	file = basename(md5file);
+	#ifdef SOFIA3GR_PCBA
+	sprintf(cmd, "/system/bin/busybox md5sum -c '%s'", file);
+	#else
 	sprintf(cmd, "/sbin/busybox md5sum -c '%s'", file);
+	#endif
 	FILE * cs = __popen(cmd, "r");
 	char cs_s[PATH_MAX + 50];
 	fgets(cs_s, PATH_MAX + 50, cs);
@@ -2452,10 +2461,15 @@ void run_script(const char *str1, const char *str2, const char *str3, const char
                 	ui_print("%s", str2);
 		        pid_t pid = fork();
                 	if (pid == 0) {
-                		char *args[] = { "/sbin/sh", "-c", (char*)str3, "1>&2", NULL };
-                	        execv("/sbin/sh", args);
-                	        fprintf(stderr, str4, strerror(errno));
-                	        _exit(-1);
+						#ifdef SOFIA3GR_PCBA
+							char *args[] = { "/system/bin/sh", "-c", (char*)str3, "1>&2", NULL };
+            	        	execv("/system/bin/sh", args);
+						#else
+							char *args[] = { "/sbin/sh", "-c", (char*)str3, "1>&2", NULL };
+            	        	execv("/sbin/sh", args);
+						#endif
+            	        fprintf(stderr, str4, strerror(errno));
+            	        _exit(-1);
                 	}
 			int status;
 			while (waitpid(pid, &status, WNOHANG) == 0) {
diff --git a/fb_test.c b/fb_test.c
index 4050118..4dacc3c 100755
--- a/fb_test.c
+++ b/fb_test.c
@@ -20,7 +20,12 @@
 
 
 #define FB_PATH "/dev/graphics/fb0"
-#define HZK_PATH "/res/images/HZK16"
+
+#ifdef SOFIA3GR_PCBA
+	#define HZK_PATH "/system/etc/images/HZK16"
+#else
+	#define HZK_PATH "/res/images/HZK16"
+#endif
 
 #define MIN(x,y)  (((x)<(y))?(x):(y))
 #define MAX(x,y)  (((x)>(y))?(x):(y))
diff --git a/gsensor_test.c b/gsensor_test.c
index 3e197dd..6c12b82 100755
--- a/gsensor_test.c
+++ b/gsensor_test.c
@@ -162,7 +162,7 @@ int openInput(const char* inputName)
 		//g_msg->y = get_cur_print_y();
 	}
         */
-	
+	#if 0
  	fd = openInput("gsensor");
 	if(fd < 0)
 	{
@@ -204,7 +204,7 @@ int openInput(const char* inputName)
 
     close(fd);
     close(fd_dev);
-
+	#endif
     ui_print_xy_rgba(0,g_msg.y,0,255,0,255,"%s:[%s]\n",PCBA_GSENSOR,PCBA_SECCESS);
 	return argv;
  }
diff --git a/gui/action.cpp b/gui/action.cpp
index 9d0455e..db0f233 100755
--- a/gui/action.cpp
+++ b/gui/action.cpp
@@ -225,7 +225,11 @@ int GUIAction::flash_zip(std::string filename, std::string pageName, const int s
 
 		// Now, check if we need to ensure TWRP remains installed...
 		struct stat st;
+		#ifdef SOFIA3GR_PCBA
+		if (stat("/system/bin/installTwrp", &st) == 0)
+		#else
 		if (stat("/sbin/installTwrp", &st) == 0)
+		#endif
 		{
 			DataManager::SetValue("tw_operation", "Configuring TWRP");
 			DataManager::SetValue("tw_partition", "");
@@ -380,7 +384,11 @@ int GUIAction::doAction(Action action, int isThreaded /* = 0 */)
 		{
 			// Loading the custom theme failed - try loading the stock theme
 			LOGI("Attempting to reload stock theme...\n");
-			if (PageManager::ReloadPackage("TWRP", "/res/ui.xml"))
+			#ifdef SOFIA3GR_PCBA
+				if (PageManager::ReloadPackage("TWRP", "/system/etc/ui.xml"))
+			#else
+				if (PageManager::ReloadPackage("TWRP", "/res/ui.xml"))
+			#endif
 			{
 				LOGE("Failed to load base packages.\n");
 				ret_val = 1;
@@ -1045,7 +1053,11 @@ int GUIAction::doAction(Action action, int isThreaded /* = 0 */)
 								{
 									// Loading the custom theme failed - try loading the stock theme
 									LOGI("Attempting to reload stock theme...\n");
-									if (PageManager::ReloadPackage("TWRP", "/res/ui.xml"))
+									#ifdef SOFIA3GR_PCBA
+										if (PageManager::ReloadPackage("TWRP", "/system/etc/ui.xml"))
+									#else
+										if (PageManager::ReloadPackage("TWRP", "/res/ui.xml"))
+									#endif
 									{
 										LOGE("Failed to load base packages.\n");
 									}
diff --git a/gui/gui.cpp b/gui/gui.cpp
index b6ab6ba..74fa2aa 100755
--- a/gui/gui.cpp
+++ b/gui/gui.cpp
@@ -730,11 +730,19 @@ extern "C" int gui_loadResources()
 
 		//theme_path += "/TWRP/theme/ui.zip";
 		check =1 ;
+		#ifdef SOFIA3GR_PCBA
+		theme_path = "/system/etc/ui.zip";
+		#else
 		theme_path = "/res/ui.zip";
+		#endif
 		PageManager::LoadPackage("TWRP", theme_path, "main");
 		if (check || PageManager::LoadPackage("TWRP", theme_path, "main"))
 		{
+			#ifdef SOFIA3GR_PCBA
+			if (PageManager::LoadPackage("TWRP", "/system/etc/ui.xml", "main"))
+			#else
 			if (PageManager::LoadPackage("TWRP", "/res/ui.xml", "main"))
+			#endif
 			{
 				LOGE("Failed to load base packages.\n");
 				goto error;
diff --git a/minuitwrp/graphics.c b/minuitwrp/graphics.c
index 5bb14d1..abae348 100755
--- a/minuitwrp/graphics.c
+++ b/minuitwrp/graphics.c
@@ -649,7 +649,11 @@ void* gr_loadFont(const char* fontName)
     {
         char tmp[128];
 
-        sprintf(tmp, "/res/fonts/%s.dat", fontName);
+		#ifdef SOFIA3GR_PCBA
+		sprintf(tmp, "/system/etc/fonts/%s.dat", fontName);
+		#else
+		sprintf(tmp, "/res/fonts/%s.dat", fontName);
+		#endif
         fd = open(tmp, O_RDONLY);
         if (fd == -1)
             return NULL;
diff --git a/minuitwrp/resources.c b/minuitwrp/resources.c
index e96b28e..6ea96f4 100755
--- a/minuitwrp/resources.c
+++ b/minuitwrp/resources.c
@@ -56,7 +56,11 @@ int res_create_surface_png(const char* name, gr_surface* pSurface) {
     if (fp == NULL) {
         char resPath[256];
 
-        snprintf(resPath, sizeof(resPath)-1, "/res/images/%s.png", name);
+		#ifdef SOFIA3GR_PCBA
+			snprintf(resPath, sizeof(resPath)-1, "/system/etc/images/%s.png", name);
+		#else
+			snprintf(resPath, sizeof(resPath)-1, "/res/images/%s.png", name);
+		#endif
         resPath[sizeof(resPath)-1] = '\0';
         fp = fopen(resPath, "rb");
         if (fp == NULL)
diff --git a/pre_test.c b/pre_test.c
index f3d2a30..274aca8 100755
--- a/pre_test.c
+++ b/pre_test.c
@@ -56,7 +56,13 @@
 #endif
 #endif
 
+#ifdef SOFIA3GR_PCBA
+#define SCRIPT_NAME                     "/system/etc/test_config.cfg"
+#else
 #define SCRIPT_NAME                     "/res/test_config.cfg"
+#endif
+
+
 #define ITEM_H				2			//height of test item
 #define ITEM_X				0			//x positon of test item
 
@@ -625,17 +631,29 @@ int main(int argc, char **argv)
 	struct list_head *pos;
 	int success = 0;
 	
-	freopen("/dev/ttyFIQ0", "a", stdout); setbuf(stdout, NULL);
-	freopen("/dev/ttyFIQ0", "a", stderr); setbuf(stderr, NULL);
+	printf("%s line=%d SCRIPT_NAME=%s\n", __FUNCTION__, __LINE__, SCRIPT_NAME);
 
-    	
+	
+	#ifdef SOFIA3GR_PCBA
+		//freopen("/dev/ttyS1", "a", stdout); setbuf(stdout, NULL);
+		//freopen("/dev/ttyS1", "a", stderr); setbuf(stderr, NULL);
+	#else
+		freopen("/dev/ttyFIQ0", "a", stdout); setbuf(stdout, NULL);
+		freopen("/dev/ttyFIQ0", "a", stderr); setbuf(stderr, NULL);
+	#endif
+
+	printf("wjh1111111111111111111%s line=%d \n", __FUNCTION__, __LINE__);
+	
 	if (gui_init())
 	{
 		ui_init();
 		ui_set_background(BACKGROUND_ICON_INSTALLING);
 	}
+	printf("wjh22222222222222222222222%s line=%d \n", __FUNCTION__, __LINE__);
 	ui_print_init();
+	printf("wjh3333333333333333333333333%s line=%d \n", __FUNCTION__, __LINE__);
 	gui_loadResources();
+	printf("wjh444444444444444444444444%s line=%d \n", __FUNCTION__, __LINE__);
 #if 1
 	w =  gr_fb_width() >> 1;
 	ui_print_xy_rgba(((w>>1)/CHAR_WIDTH-9),0,0,255,0,255,"%s\n",PCBA_VERSION_NAME);
@@ -645,19 +663,21 @@ int main(int argc, char **argv)
 	cur_p_y = (gr_fb_height()/CHAR_HEIGHT) - 1;
 	INIT_LIST_HEAD(&manual_test_list_head);
 	INIT_LIST_HEAD(&auto_test_list_head);
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	script_buf = parse_script(SCRIPT_NAME);
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	if (!script_buf)
 	{
 		   printf("parse script failed\n");
 		   return -1;
 	}
-	
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	ret = init_script(script_buf);
 	if (ret) {
 		   db_error("core: init script failed(%d)\n", ret);
 		   return -1;
 	}
-	
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	ret = parse_testcase();
 	if (ret < 0) {
 		db_error("core: parse all test case from script failed(%d)\n", ret);
@@ -667,23 +687,25 @@ int main(int argc, char **argv)
 		db_warn("core: NO TEST CASE to be run\n");
 		return -1;
 	}
-
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	printf("manual testcase:\n");
 	list_for_each(pos, &manual_test_list_head) {
 		struct testcase_info *tc_info = list_entry(pos, struct testcase_info, list);
 		init_manual_test_item(tc_info);
 		
 	}
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	ui_print_xy_rgba(((w>>1)/CHAR_WIDTH-3),manual_p_y+1,255,255,0,255,"%s\n",PCBA_AUTO_TEST);
         drawline_4(255,255,0,255,0,(CHAR_HEIGHT*(manual_p_y+1)-CHAR_HEIGHT/4),w,CHAR_HEIGHT,3); 
 
 	printf("\n\nauto testcase:\n");
 	list_for_each(pos, &auto_test_list_head) {
 		struct testcase_info *tc_info = list_entry(pos, struct testcase_info, list);
-		start_auto_test_item(tc_info);
+		//start_auto_test_item(tc_info);
 	}
 	
 #endif
+	printf("%s line=%d \n", __FUNCTION__, __LINE__);
 	//while(1);
 	gui_start();
 	start_input_thread();
diff --git a/reboot.c b/reboot.c
index 23b700c..0a21ba4 100755
--- a/reboot.c
+++ b/reboot.c
@@ -45,30 +45,57 @@ int tw_reboot(RebootCommand command)
 
    // ensure_path_unmounted("/sdcard");
 
-    switch (command)
-    {
-    case rb_current:
-    case rb_system:
-        //finish_recovery("s");
-		sync();
-		check_and_run_script("/sbin/rebootsystem.sh", "reboot system");
-        return reboot(RB_AUTOBOOT);
-    case rb_recovery:
-		check_and_run_script("/sbin/rebootrecovery.sh", "reboot recovery");
-        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "recovery");
-    case rb_bootloader:
-		check_and_run_script("/sbin/rebootbootloader.sh", "reboot bootloader");
-        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "bootloader");
-    case rb_poweroff:
-		check_and_run_script("/sbin/poweroff.sh", "power off");
-        return reboot(RB_POWER_OFF);
-    case rb_download:
-		check_and_run_script("/sbin/rebootdownload.sh", "reboot download");
-		return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "download");
-	return 1;
-    default:
-        return -1;
-    }
+	#ifdef SOFIA3GR_PCBA
+		switch (command)
+	    {
+	    case rb_current:
+	    case rb_system:
+	        //finish_recovery("s");
+			sync();
+			check_and_run_script("/system/etc/rebootsystem.sh", "reboot system");
+	        return reboot(RB_AUTOBOOT);
+	    case rb_recovery:
+			check_and_run_script("/system/etc/rebootrecovery.sh", "reboot recovery");
+	        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "recovery");
+	    case rb_bootloader:
+			check_and_run_script("/system/etc/rebootbootloader.sh", "reboot bootloader");
+	        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "bootloader");
+	    case rb_poweroff:
+			check_and_run_script("/system/etc/poweroff.sh", "power off");
+	        return reboot(RB_POWER_OFF);
+	    case rb_download:
+			check_and_run_script("/system/etc/rebootdownload.sh", "reboot download");
+			return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "download");
+		return 1;
+	    default:
+	        return -1;
+	    }
+	#else
+		switch (command)
+	    {
+	    case rb_current:
+	    case rb_system:
+	        //finish_recovery("s");
+			sync();
+			check_and_run_script("/sbin/rebootsystem.sh", "reboot system");
+	        return reboot(RB_AUTOBOOT);
+	    case rb_recovery:
+			check_and_run_script("/sbin/rebootrecovery.sh", "reboot recovery");
+	        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "recovery");
+	    case rb_bootloader:
+			check_and_run_script("/sbin/rebootbootloader.sh", "reboot bootloader");
+	        return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "bootloader");
+	    case rb_poweroff:
+			check_and_run_script("/sbin/poweroff.sh", "power off");
+	        return reboot(RB_POWER_OFF);
+	    case rb_download:
+			check_and_run_script("/sbin/rebootdownload.sh", "reboot download");
+			return __reboot(LINUX_REBOOT_MAGIC1, LINUX_REBOOT_MAGIC2, LINUX_REBOOT_CMD_RESTART2, (void*) "download");
+		return 1;
+	    default:
+	        return -1;
+	    }
+	#endif
     return -1;
 }
 
diff --git a/rtc_test.c b/rtc_test.c
index a892e5b..2d14a36 100755
--- a/rtc_test.c
+++ b/rtc_test.c
@@ -166,7 +166,7 @@ void* rtc_test(void *argc)
 	
 	y = tc_info->y;	
 	ui_print_xy_rgba(0,y,255,255,0,255,"%s:[%s..] \n",PCBA_RTC,PCBA_TESTING);
-
+	return argc;//wjh
 
 	s = malloc(32);
 	 if(script_fetch("rtc", "module_args", (int *)dt, 8) == 0)
diff --git a/sdcard_test.c b/sdcard_test.c
index 0f50afd..ab9361c 100755
--- a/sdcard_test.c
+++ b/sdcard_test.c
@@ -29,7 +29,11 @@ void * sdcard_test(void * argv)
 	#ifdef RK3288_PCBA
 	ret =  __system("busybox chmod 777 /res/emmctester.sh");
 	#else
-	ret =  __system("busybox chmod 777 /res/mmctester.sh");
+		#ifdef SOFIA3GR_PCBA
+		ret =  __system("busybox chmod 777 /system/etc/mmctester.sh");
+		#else
+		ret =  __system("busybox chmod 777 /res/mmctester.sh");
+		#endif
 	#endif
 	if(ret)
 		printf("chmod mmctester.sh failed :%d\n",ret);
@@ -37,7 +41,11 @@ void * sdcard_test(void * argv)
     #ifdef RK3288_PCBA      
     ret = __system("/res/emmctester.sh");
     #else
-    ret = __system("/res/mmctester.sh");
+		#ifdef SOFIA3GR_PCBA
+		ret = __system("/system/etc/mmctester.sh");
+		#else
+		ret = __system("/res/mmctester.sh");
+		#endif
     #endif
 		
 	if(ret < 0) {
@@ -57,7 +65,12 @@ void * sdcard_test(void * argv)
 	}
 
 	
-	/*if(stat("/res/images/wifi_scan.txt", &stat_ret) < 0) {
+	/*
+		#ifdef SOFIA3GR_PCBA
+		if(stat("/system/etc/images/wifi_scan.txt", &stat_ret) < 0) {
+		#else
+		if(stat("/res/images/wifi_scan.txt", &stat_ret) < 0) {
+		#endif
 		LOG( "error getting file stat.\n");				 
 		return -1;
 	}*/
diff --git a/udisk_test.c b/udisk_test.c
index 3358fa6..f955026 100755
--- a/udisk_test.c
+++ b/udisk_test.c
@@ -27,11 +27,22 @@ void * udisk_test(void * argv)
 	y = tc_info->y;
 	ui_print_xy_rgba(0,y,255,255,0,255,"%s \n",PCBA_UCARD);
 
-	ret =  __system("busybox chmod 777 /res/udisktester.sh");
+	#if 0
+	
+	#ifdef SOFIA3GR_PCBA
+		ret =  __system("busybox chmod 777 /system/etc/udisktester.sh");
+	#else
+		ret =  __system("busybox chmod 777 /res/udisktester.sh");
+	#endif
+
 	if(ret)
 		printf("chmod udisktester.sh failed :%d\n",ret);
-		
-	ret = __system("/res/udisktester.sh");
+
+	#ifdef SOFIA3GR_PCBA
+		ret = __system("/system/etc/udisktester.sh");
+	#else
+		ret = __system("/res/udisktester.sh");
+	#endif
 	if(ret < 0) {
 		printf("udisk test failed.\n");
 		ui_print_xy_rgba(0,y,255,0,0,255,"%s:[%s]\n",PCBA_UCARD,PCBA_FAILED);
@@ -60,7 +71,7 @@ void * udisk_test(void * argv)
         ui_print_xy_rgba(0,y,0,0,255,255,"%s:[%s]\n",PCBA_UCARD,PCBA_FAILED);
 
         fclose(fp);
-
+	#endif
 	return argv;
 	
 }
diff --git a/wlan_test.c b/wlan_test.c
index b32fe42..303047d 100755
--- a/wlan_test.c
+++ b/wlan_test.c
@@ -153,12 +153,21 @@ void* wlan_test(void* argv)
 
 	y = tc_info->y;
 	ui_print_xy_rgba(0,y,255,255,0,255,"%s:[%s..] \n",PCBA_WIFI,PCBA_TESTING);
-	
-	ret =  __system("busybox chmod 777 /res/wifi.sh");
+
+#if 0
+	#ifdef SOFIA3GR_PCBA
+		ret =  __system("busybox chmod 777 /system/etc/wifi.sh");
+	#else
+		ret =  __system("busybox chmod 777 /res/wifi.sh");
+	#endif
 	if(ret)
 		LOG("chmod wifi.sh failed :%d\n",ret);
-		
-	ret = __system("/res/wifi.sh");
+
+	#ifdef SOFIA3GR_PCBA
+		ret = __system("/system/etc/wifi.sh");
+	#else
+		ret = __system("/res/wifi.sh");
+	#endif
 	if(ret <= 0) {
 		LOG("wifi test failed.\n");
 		goto error_exit;
@@ -226,6 +235,6 @@ error_exit:
 	
 	ui_print_xy_rgba(0,y,225,0,0,255,"%s:[%s] %s\n",PCBA_WIFI,PCBA_FAILED,ssid);
 	tc_info->result = -1;
-		
+#endif
   return argv;
 }
